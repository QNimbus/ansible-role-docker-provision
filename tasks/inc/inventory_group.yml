---
- name: Bring up inventory group of hosts.
  docker_container:
    name: '{{ item }}'
    command: '{{ hostvars[item].command | default(docker_provision_command) }}'
    env: '{{ hostvars[item].env | default(docker_provision_env) }}'
    image: '{{ hostvars[item].image | default(docker_provision_image) }}'
    network_mode: '{{ hostvars[item].network_mode|default(docker_provision_network_mode) }}'
    ports: '{{ hostvars[item].ports | default(docker_provision_ports) }}'
    privileged: '{{ hostvars[item].privileged | default(docker_provision_privileged) }}'
    pull: '{{ hostvars[item].pull | default(docker_provision_pull) }}'
    restart: '{{ hostvars[item].restart | default(docker_provision_restart) }}'
    restart_policy: '{{ hostvars[item].restart_policy | default(docker_provision_restart_policy) }}'
    state: '{{ hostvars[item].state | default(docker_provision_state) }}'
  with_items: '{{ docker_provision_inventory_group }}'

- name: Get container IP address.
  delegate_to: localhost
  command: "docker inspect --format '{% raw %}{{ range .NetworkSettings.Networks }}{{ .IPAddress }}{{ end }}{% endraw %}' {{ item }}"
  register: docker_provision_ip
  changed_when: false
  with_items: '{{ docker_provision_inventory_group }}'

  # Use SSH connection for docker hosts.
- block:
    - name: Associate IP address with hosts.
      set_fact:
        ansible_ssh_host: '{{ docker_provision_ip.results[item.0].stdout }}'
        ansible_ssh_user: "{{ hostvars[item.1]['ansible_ssh_user'] | default(docker_provision_ssh_user) }}"
        ansible_ssh_pass: "{{ hostvars[item.1]['ansible_ssh_pass'] | default(docker_provision_ssh_pass) }}"
      delegate_to: '{{ item.1 }}'
      delegate_facts: true
      changed_when: false
      with_indexed_items: '{{ docker_provision_inventory_group }}'

    - name: Wait for SSH connection.
      wait_for:
        host: "{{ hostvars[item]['ansible_ssh_host'] }}"
        port: 22
        timeout: 60
        connect_timeout: 5
      with_items: '{{ docker_provision_inventory_group }}'

  when: not docker_provision_use_docker_connection

  # Use Docker connection for docker hosts.
- block:
    - name: Change hosts connection to use Docker
      add_host:
        name: '{{ item.1 }}'
        docker_ip: '{{ docker_provision_ip.results[item.0].stdout }}'
        ansible_connection: docker
        ansible_user: root
        groups: "{{ docker_provision_groups | union(item.1['groups'] | default([])) | join(',') }}"
      changed_when: false
      with_indexed_items: '{{ docker_provision_inventory_group }}'
  when: docker_provision_use_docker_connection

  # Common configuration of docker hosts.
- block:
    - name: Set Python interpreter for hosts.
      set_fact:
        ansible_python_interpreter: "{{ hostvars[item.1]['ansible_python_interpreter'] | default(docker_provision_ansible_python_interpreter) }}"
      delegate_to: '{{ item.1 }}'
      delegate_facts: true
      changed_when: false
      with_indexed_items: '{{ docker_provision_inventory_group }}'

- name: Ensure hosts are reachable.
  ping:
  delegate_to: '{{ item }}'
  with_items: '{{ docker_provision_inventory_group }}'
